{"version":3,"sources":["Components/Error/Error.js","Components/Loading/Loading.js","Components/NoData/NoData.js","Components/HealthLabels/HealthLabels.js","Components/Ingredients/Ingredients.js","Components/Recipe.js","Components/List/List.js","App.js","index.js"],"names":["Error","err","className","Loading","CircularProgress","NoData","HealthLabels","healthLabels","map","item","ItemWithoutMinus","replace","key","uuid","Ingredients","ingredients","Typography","paragraph","weight","rounded","parseFloat","toFixed","text","useStyles","makeStyles","theme","createStyles","root","maxWidth","width","margin","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","Recipe","calories","image","title","source","classes","React","useState","expanded","setExpanded","Card","CardHeader","Avatar","aria-label","toUpperCase","subheader","CardMedia","CardContent","variant","color","component","CardActions","disableSpacing","IconButton","clsx","onClick","aria-expanded","Collapse","in","timeout","unmountOnExit","List","loading","recipes","length","recipe","label","App","setRecipes","search","setSearch","setLoading","setErr","getRecipes","a","fetch","response","json","data","hits","onSubmit","event","preventDefault","placeholder","type","value","onChange","target","Button","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.18a3ff9e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Error.css\";\r\n\r\nconst Error = ({ err }) => {\r\n    return (\r\n        <div className=\"error-container\">\r\n            <h2>Error 404 server problems</h2>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Error;\r\n","import React from \"react\";\r\nimport \"./Loading.css\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <div className=\"loading\">\r\n            <CircularProgress />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loading;\r\n","import React from \"react\";\r\nimport \"./NoData.css\";\r\n\r\nconst NoData = () => {\r\n    return (\r\n        <div className=\"nodata-container\">\r\n            <div>\r\n                <h2>No recipes found reason may be</h2>\r\n            </div>\r\n            <ul>\r\n                <li>You have not search anithing...</li>\r\n                <li>No results found by your search...</li>\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NoData;\r\n","import React from \"react\";\r\nimport uuid from \"react-uuid\";\r\n\r\nconst HealthLabels = ({ healthLabels }) => {\r\n    return healthLabels.map((item) => {\r\n        let newItem = item;\r\n        let ItemWithoutMinus = newItem.replace(/-/gi, \" \");\r\n        return <span key={uuid()}>{`${ItemWithoutMinus},`}</span>;\r\n    });\r\n};\r\n\r\nexport default HealthLabels;\r\n","import React from \"react\";\r\nimport uuid from \"react-uuid\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst Ingredients = ({ ingredients }) => {\r\n    return (\r\n        <>\r\n            <Typography paragraph>Ingredients:</Typography>\r\n            {ingredients.map((item) => {\r\n                const weight = item.weight;\r\n                const rounded = parseFloat(weight.toFixed(1));\r\n                return (\r\n                    <Typography key={uuid()} paragraph>\r\n                        {item.text} {rounded} gram\r\n                    </Typography>\r\n                );\r\n            })}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Ingredients;\r\n","import React from \"react\";\r\nimport HealthLabels from \"../Components/HealthLabels/HealthLabels\";\r\nimport Ingredients from \"../Components/Ingredients/Ingredients\";\r\n\r\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n    createStyles({\r\n        root: {\r\n            maxWidth: 345,\r\n            width: \"100%\",\r\n            margin: \"5px\",\r\n        },\r\n        media: {\r\n            height: 0,\r\n            paddingTop: \"56.25%\", // 16:9\r\n        },\r\n        expand: {\r\n            transform: \"rotate(0deg)\",\r\n            marginLeft: \"auto\",\r\n            transition: theme.transitions.create(\"transform\", {\r\n                duration: theme.transitions.duration.shortest,\r\n            }),\r\n        },\r\n        expandOpen: {\r\n            transform: \"rotate(180deg)\",\r\n        },\r\n        avatar: {\r\n            backgroundColor: red[500],\r\n        },\r\n    })\r\n);\r\n\r\nconst Recipe = ({\r\n    calories,\r\n    healthLabels,\r\n    image,\r\n    ingredients,\r\n    title,\r\n    source,\r\n}) => {\r\n    const classes = useStyles();\r\n    const [expanded, setExpanded] = React.useState(false);\r\n\r\n    const handleExpandClick = () => {\r\n        setExpanded(!expanded);\r\n    };\r\n\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardHeader\r\n                avatar={\r\n                    <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                        {title ? title[0].toUpperCase() : null}\r\n                    </Avatar>\r\n                }\r\n                title={title}\r\n                subheader={source ? `source : ${source}` : null}\r\n            />\r\n            <CardMedia className={classes.media} image={image} title={title} />\r\n            <CardContent>\r\n                <Typography\r\n                    variant=\"body2\"\r\n                    color=\"textSecondary\"\r\n                    component=\"div\"\r\n                >\r\n                    <div>health labels :</div>\r\n                    <div>\r\n                        <HealthLabels healthLabels={healthLabels} />\r\n                    </div>\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions disableSpacing>\r\n                <IconButton\r\n                    className={clsx(classes.expand, {\r\n                        [classes.expandOpen]: expanded,\r\n                    })}\r\n                    onClick={handleExpandClick}\r\n                    aria-expanded={expanded}\r\n                    aria-label=\"show more\"\r\n                >\r\n                    <ExpandMoreIcon />\r\n                </IconButton>\r\n            </CardActions>\r\n            <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n                <CardContent>\r\n                    <Ingredients ingredients={ingredients} />\r\n                </CardContent>\r\n            </Collapse>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default Recipe;\r\n","import React from \"react\";\r\n// components\r\nimport Error from \"../Error/Error\";\r\nimport Loading from \"../Loading/Loading\";\r\nimport NoData from \"../NoData/NoData\";\r\nimport Recipe from \"../Recipe\";\r\nimport uuid from \"react-uuid\";\r\n\r\nconst List = ({ loading, recipes, err }) => {\r\n    if (loading) {\r\n        return (\r\n            <div>\r\n                <Loading />\r\n            </div>\r\n        );\r\n    }\r\n    if (err) {\r\n        return <Error err={err} />;\r\n    }\r\n    if (recipes.length === 0) {\r\n        return <NoData />;\r\n    }\r\n    return (\r\n        <div className=\"recipes\">\r\n            {recipes.map((item) => {\r\n                const { recipe } = item;\r\n                return (\r\n                    <Recipe\r\n                        calories={recipe.calories}\r\n                        healthLabels={recipe.healthLabels}\r\n                        image={recipe.image}\r\n                        ingredients={recipe.ingredients}\r\n                        key={uuid()}\r\n                        source={recipe.source}\r\n                        title={recipe.label}\r\n                    />\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default List;\r\n","import React from \"react\";\nimport { useState } from \"react\";\n// components\nimport List from \"./Components/List/List\";\n\nimport Button from \"@material-ui/core/Button\";\n\nconst App = () => {\n    const APP_ID = \"4c4e8990\";\n    const APP_KEY = \"dd268ffd9df9869bcbce1dccddbb9a12\";\n    // const exampleReq = `https://api.edamam.com/search?q=chicken&app_id=${APP_ID}&app_key=${APP_KEY}`;\n\n    const [recipes, setRecipes] = useState([]);\n    const [search, setSearch] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const [err, setErr] = useState(\"\");\n\n    const getRecipes = async (search) => {\n        setLoading(true);\n        try {\n            const response = await fetch(\n                `https://api.edamam.com/search?q=${search}&app_id=${APP_ID}&app_key=${APP_KEY}`\n            );\n            const data = await response.json();\n\n            setLoading(false);\n            setRecipes(data.hits);\n        } catch (err) {\n            setErr(err);\n            setLoading(false);\n        }\n    };\n\n    const handleChange = (event) => {\n        setSearch(event.target.value);\n    };\n\n    const getSearch = (event) => {\n        event.preventDefault();\n        getRecipes(search);\n        setSearch(\" \");\n    };\n\n    return (\n        <div className=\"app\">\n            <h1 className=\"header\">\n                <span>Search a recipe with </span>ingridients you have\n            </h1>\n            <form onSubmit={getSearch} className=\"search-form\">\n                <input\n                    className=\"search-bar\"\n                    placeholder=\"Write only one ingredient\"\n                    type=\"text\"\n                    value={search}\n                    onChange={handleChange}\n                />\n                <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                    Find\n                </Button>\n            </form>\n\n            <List loading={loading} recipes={recipes} err={err} />\n        </div>\n    );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./App.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}